docker images посмотреть слои
docker ps посмотреть контейнеры которые запущены
docker ps -a посмотреть все контейнеры
docker rmi (имя image) чтобы удалить локально
docker rmi $(docker images -q) -f удалить все без вопросов

FROM python:3 # слой на который мы будем накладывать новый слой с нашим приложением

RUN (какой то скрипт который нужно запустить)  запуск скрипта, mkdir, npm install и так далее


WORKDIR /usr/src/app/ далее указываем что эта директория будет рабочей

COPY . /usr/src/app первый аргумент что мы будем копировать, куда мы будем копировать

CMD ["python","main.py"] какие команды выполнить
ENTRYPOINT ["python","main.py"]
ENTRYPOINT похожие на CMD


cmd === entrypoint, cmd запускает shell, или bash, entrypoint нет

sudo docker build -t hello-world .

-t имя слоя чтобы указать

sudo docker run (имя слоя который нужно запустить) = чтобы запустить контейнер
sudo docker run --name (имя контейнера) (имя слоя) = чтобы запустить контейнер
параметр -d запустит контейнер на фоне
--rm после того как контейнер перестанет работать то он удалится
-e далее прописываем переменных и их значения это как ENV
-v параметр говорит с каким файлом в нашей системе будет работать контейнер, пример использования
-v (путь к файлу на нашей машине, путь к файлу в контейнере) и таким образом изменения которые будут происходить
на нашей системе, будут отображаться в контейнере, если контейнер изменит что-то в этом файле, то изменения будут присходить
и на нашей машине
DOCKER VOLUME = это папка которая лежит в нашей машине,  которая прицепляется к контейнеру
docker volume ls чтобы посмотреть какие volume есть
docker volume create (имя volume) чтобы создать volume
чтобы подключиться к volume
так же пишем -v (имя volume,путь к папке с которым связать volume)
и всё что будет происходить в контейнере, будет сохраняться в docker volume который можно например выгрузить

docker stop (имя контейнера)

docker rm (имя контейнера)


 sudo docker rm $(sudo docker ps -qa)

EXPOSE (имя порта) говорим контейнеру какой порт ему открыть наружу
и при запуске мы указываем параметр -p

sudo docker run -p (первый порт где будет запущен контейнер на нашей машине:порт который открыт в контейнере)

ENV (имя переменной зарезервированы, для обозначения времени в контейнере TZ) = (значение переменной)






1. Скачиваем слой
Создаём скрипт с нашим слоем
Соединяем слои называем как то наш слой
и запускаем этот кастомный слой


sudo docker run -p 3306:3306 --name docker_db --rm -d -e MYSQL_ROOT_PASSWORD=123456 -e MYSQL_USER=esdp-user -e MYSQL_PASSWORD=esdp-user -e MYSQL_DATABASE=database_esdp mysql

sudo docker exec -it docker_db mysql -uesdp-user -pesdp-user

docker image prune -f

